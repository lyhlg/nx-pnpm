name: Release
on:
  push:
    branches:
      - main

permissions:
  contents: read # for checkout
  pull-requests: write


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - name: ðŸ¥¡ Setup pnpm
        uses: pnpm/action-setup@v4
      - name: ðŸ§© Install Dependencies
        run: pnpm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.HP_GITHUB_TOKEN }}
#      - name: Install dependencies
#        run: pnpm install --shamefully-hoist
#      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
#        run: pnpm audit signatures
      - name: build
        run: pnpm run build
#      - name: Release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#        run: pnpm semantic-release
  release-please-tag:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: googleapis/release-please-action@v4
        id: tag
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          skip-github-pull-request: true
      - uses: actions/checkout@v4
      - name: tag major and patch versions
        run: |
          git config user.name ian[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN}}@github.com/googleapis/release-please-action.git"
          git tag -d v${{ steps.release.outputs.major }} || true
          git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git push origin :v${{ steps.release.outputs.major }} || true
          git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git tag -a v${{ steps.release.outputs.major }} -m "Release v${{ steps.release.outputs.major }}"
          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}"
          git push origin v${{ steps.release.outputs.major }}
          git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}
        if: ${{ steps.release.outputs.release_created }}

  release-please:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: googleapis/release-please-action@v4
        with:
          # this assumes that you have created a personal access token
          # (PAT) and configured it as a GitHub action secret named
          # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).
          token: ${{ secrets.GITHUB_TOKEN }}
          # this is a built-in strategy in release-please, see "Action Inputs"
          # for more options
          release-type: node
          include-component-in-tag: true
          skip-github-release: true

#  release:
#    name: Release
#    runs-on: ubuntu-latest
#    permissions:
#      contents: write # to be able to publish a GitHub release
#      issues: write # to be able to comment on released issues
#      pull-requests: write # to be able to comment on released pull requests
#      id-token: write # to enable use of OIDC for npm provenance
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#      - name: Setup Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: "lts/*"
#      - name: ðŸ¥¡ Setup pnpm
#        uses: pnpm/action-setup@v4
#      - name: ðŸ§© Install Dependencies
#        run: pnpm install
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.HP_GITHUB_TOKEN }}
##      - name: Install dependencies
##        run: pnpm install --shamefully-hoist
##      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
##        run: pnpm audit signatures
#      - name: Release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#        run: pnpm semantic-release
